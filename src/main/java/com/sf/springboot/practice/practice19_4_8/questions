pratice 4.8
将一个非线程安全的HashMap改造为线程安全的	Cache,
要求使用读写锁的读锁和写锁来保证Cache是线程安全的。
在读操作get(key)方法中，需要获取读锁，使得并发访问该方法时不会被阻塞。
写操作put(key, value)方法和clear()方法，在更新HashMap时必须提前获取写锁，
当获取写锁后，其他线程对于读锁和写锁的获取均被阻塞，而只有写锁被释放之后，其他读写操作才能继续。

注：读写锁分离，提升读操作的并发性，也保证每次写操作对所有的读写操作的可见性。